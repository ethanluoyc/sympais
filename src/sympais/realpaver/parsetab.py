# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
# flake8: noqa
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSUPLUSleftEQUALSleftFORCOMMA DIVIDE EQUALS FLOAT FOR GREATER_THAN ID IN INT LBRACK LESS_THAN LPAREN MINUS PLUS RBRACK RPAREN TIMES UMINUS UPLUSstatement : equationequation : expression EQUALS expression\n                    | expression LESS_THAN expression\n                    | expression GREATER_THAN expression statement : equation FOR ID IN ID arguments : expression COMMA arguments\n                     | expression expression : ID LPAREN arguments RPAREN expression : expression PLUS expression\n                      | expression MINUS expression\n                      | expression TIMES expression\n                      | expression DIVIDE expressionexpression : LPAREN expression RPAREN expression : INTexpression : FLOATexpression : MINUS expression %prec UMINUS\n                      | PLUS expression %prec UPLUS expression : ID LBRACK expression RBRACKexpression : ID'

_lr_action_items = {
    'ID': ([
        0,
        5,
        6,
        7,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        35,
        37,
    ], [
        3,
        3,
        3,
        3,
        23,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        39,
        3,
    ]),
    'LPAREN': ([
        0,
        3,
        5,
        6,
        7,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        37,
    ], [
        5,
        11,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
    ]),
    'INT': ([
        0,
        5,
        6,
        7,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        37,
    ], [
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
        8,
    ]),
    'FLOAT': ([
        0,
        5,
        6,
        7,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        37,
    ], [
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
        9,
    ]),
    'MINUS': ([
        0,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        36,
        37,
        38,
    ], [
        7,
        -19,
        17,
        7,
        7,
        7,
        -14,
        -15,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        7,
        17,
        -17,
        -16,
        17,
        17,
        17,
        17,
        17,
        -9,
        -10,
        -11,
        -12,
        -13,
        -8,
        7,
        -18,
    ]),
    'PLUS': ([
        0,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        36,
        37,
        38,
    ], [
        6,
        -19,
        16,
        6,
        6,
        6,
        -14,
        -15,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        16,
        -17,
        -16,
        16,
        16,
        16,
        16,
        16,
        -9,
        -10,
        -11,
        -12,
        -13,
        -8,
        6,
        -18,
    ]),
    '$end': ([
        1,
        2,
        3,
        8,
        9,
        21,
        22,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        36,
        38,
        39,
    ], [
        0,
        -1,
        -19,
        -14,
        -15,
        -17,
        -16,
        -2,
        -3,
        -4,
        -9,
        -10,
        -11,
        -12,
        -13,
        -8,
        -18,
        -5,
    ]),
    'FOR': ([
        2,
        3,
        8,
        9,
        21,
        22,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        36,
        38,
    ], [
        10,
        -19,
        -14,
        -15,
        -17,
        -16,
        -2,
        -3,
        -4,
        -9,
        -10,
        -11,
        -12,
        -13,
        -8,
        -18,
    ]),
    'LBRACK': ([
        3,
    ], [
        12,
    ]),
    'EQUALS': ([
        3,
        4,
        8,
        9,
        21,
        22,
        30,
        31,
        32,
        33,
        34,
        36,
        38,
    ], [
        -19,
        13,
        -14,
        -15,
        -17,
        -16,
        -9,
        -10,
        -11,
        -12,
        -13,
        -8,
        -18,
    ]),
    'LESS_THAN': ([
        3,
        4,
        8,
        9,
        21,
        22,
        30,
        31,
        32,
        33,
        34,
        36,
        38,
    ], [
        -19,
        14,
        -14,
        -15,
        -17,
        -16,
        -9,
        -10,
        -11,
        -12,
        -13,
        -8,
        -18,
    ]),
    'GREATER_THAN': ([
        3,
        4,
        8,
        9,
        21,
        22,
        30,
        31,
        32,
        33,
        34,
        36,
        38,
    ], [
        -19,
        15,
        -14,
        -15,
        -17,
        -16,
        -9,
        -10,
        -11,
        -12,
        -13,
        -8,
        -18,
    ]),
    'TIMES': ([
        3,
        4,
        8,
        9,
        20,
        21,
        22,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        36,
        38,
    ], [
        -19,
        18,
        -14,
        -15,
        18,
        -17,
        -16,
        18,
        18,
        18,
        18,
        18,
        18,
        18,
        -11,
        -12,
        -13,
        -8,
        -18,
    ]),
    'DIVIDE': ([
        3,
        4,
        8,
        9,
        20,
        21,
        22,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        36,
        38,
    ], [
        -19,
        19,
        -14,
        -15,
        19,
        -17,
        -16,
        19,
        19,
        19,
        19,
        19,
        19,
        19,
        -11,
        -12,
        -13,
        -8,
        -18,
    ]),
    'RPAREN': ([
        3,
        8,
        9,
        20,
        21,
        22,
        24,
        25,
        30,
        31,
        32,
        33,
        34,
        36,
        38,
        40,
    ], [
        -19,
        -14,
        -15,
        34,
        -17,
        -16,
        36,
        -7,
        -9,
        -10,
        -11,
        -12,
        -13,
        -8,
        -18,
        -6,
    ]),
    'COMMA': ([
        3,
        8,
        9,
        21,
        22,
        25,
        30,
        31,
        32,
        33,
        34,
        36,
        38,
    ], [
        -19,
        -14,
        -15,
        -17,
        -16,
        37,
        -9,
        -10,
        -11,
        -12,
        -13,
        -8,
        -18,
    ]),
    'RBRACK': ([
        3,
        8,
        9,
        21,
        22,
        26,
        30,
        31,
        32,
        33,
        34,
        36,
        38,
    ], [
        -19,
        -14,
        -15,
        -17,
        -16,
        38,
        -9,
        -10,
        -11,
        -12,
        -13,
        -8,
        -18,
    ]),
    'IN': ([
        23,
    ], [
        35,
    ]),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
  for _x, _y in zip(_v[0], _v[1]):
    if not _x in _lr_action:
      _lr_action[_x] = {}
    _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    'statement': ([
        0,
    ], [
        1,
    ]),
    'equation': ([
        0,
    ], [
        2,
    ]),
    'expression': ([
        0,
        5,
        6,
        7,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        37,
    ], [
        4,
        20,
        21,
        22,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        25,
    ]),
    'arguments': ([
        11,
        37,
    ], [
        24,
        40,
    ]),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
  for _x, _y in zip(_v[0], _v[1]):
    if not _x in _lr_goto:
      _lr_goto[_x] = {}
    _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> statement", "S'", 1, None, None, None),
    ('statement -> equation', 'statement', 1, 'p_statement_eqn', 'realpaver.py', 158),
    ('equation -> expression EQUALS expression', 'equation', 3, 'p_expression_equation',
     'realpaver.py', 162),
    ('equation -> expression LESS_THAN expression', 'equation', 3,
     'p_expression_equation', 'realpaver.py', 163),
    ('equation -> expression GREATER_THAN expression', 'equation', 3,
     'p_expression_equation', 'realpaver.py', 164),
    ('statement -> equation FOR ID IN ID', 'statement', 5, 'p_statement_for',
     'realpaver.py', 168),
    ('arguments -> expression COMMA arguments', 'arguments', 3,
     'p_expression_arguments', 'realpaver.py', 172),
    ('arguments -> expression', 'arguments', 1, 'p_expression_arguments',
     'realpaver.py', 173),
    ('expression -> ID LPAREN arguments RPAREN', 'expression', 4, 'p_expression_func',
     'realpaver.py', 180),
    ('expression -> expression PLUS expression', 'expression', 3, 'p_expression_binop',
     'realpaver.py', 184),
    ('expression -> expression MINUS expression', 'expression', 3, 'p_expression_binop',
     'realpaver.py', 185),
    ('expression -> expression TIMES expression', 'expression', 3, 'p_expression_binop',
     'realpaver.py', 186),
    ('expression -> expression DIVIDE expression', 'expression', 3,
     'p_expression_binop', 'realpaver.py', 187),
    ('expression -> LPAREN expression RPAREN', 'expression', 3, 'p_expression_group',
     'realpaver.py', 192),
    ('expression -> INT', 'expression', 1, 'p_expression_int', 'realpaver.py', 196),
    ('expression -> FLOAT', 'expression', 1, 'p_expression_float', 'realpaver.py', 200),
    ('expression -> MINUS expression', 'expression', 2, 'p_expression_uminus',
     'realpaver.py', 204),
    ('expression -> PLUS expression', 'expression', 2, 'p_expression_uminus',
     'realpaver.py', 205),
    ('expression -> ID LBRACK expression RBRACK', 'expression', 4, 'p_expression_array',
     'realpaver.py', 209),
    ('expression -> ID', 'expression', 1, 'p_expression_id', 'realpaver.py', 213),
]
